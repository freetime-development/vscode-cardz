{"version":3,"sources":["store/cardStore.ts","components/StudyNotesInfo.tsx","components/App.tsx","index.tsx"],"names":["configure","enforceActions","CardsStore","action","bound","note","this","currentStudyNote","moment","lastReviewed","fromNow","observable","name","Date","computed","createContext","observer","cards","useContext","cardsStore","className","lastReviewedFromNow","App","history","useHistory","cardStore","useEffect","vsCode","vsCodeFunction","window","addEventListener","event","data","command","payload","lastReview","setCurrentStudyNote","push","postMessage","useVscodeEvents","path","Function","ReactDOM","render","document","getElementById"],"mappings":"uSAIAA,YAAU,CAAEC,eAAgB,a,IAEtBC,G,EAMDC,IAAOC,M,mMACkBC,G,iEACtBC,KAAKC,iBAAmBF,E,iJAKxB,OAAGC,KAAKC,iBACGC,IAAOF,KAAKC,iBAAiBE,aAAa,YAAYC,UAEtD,O,mDAfdC,K,wEAAgD,CAC7CC,KAAM,4BACNH,aAAc,IAAII,S,iLAQrBC,K,mFAWUC,0BAAc,IAAIb,G,QCLlBc,eAnBY,WACvB,IAAMC,EAAQC,qBAAWC,GAEzB,GAAGF,EAAMV,iBAAkB,CAAC,IAChBK,EAASK,EAAMV,iBAAfK,KACR,OACI,yBAAKQ,UAAU,iBACX,yBAAKA,UAAU,uBAAf,UAA4C,0BAAMA,UAAU,cAAcR,GAA1E,KACA,yBAAKQ,UAAU,uBAAf,kBAAoD,0BAAMA,UAAU,cAAeH,EAAMI,qBAAzF,MAIR,OACI,0D,QCGGC,EAfO,WAIpB,OAsBF,WACE,IAAMC,EAAUC,cACVP,EAAQC,qBAAWO,GAEzBC,qBAAU,WAER,IAAMC,EAASC,IAGfC,OAAOC,iBAAiB,WAAW,SAACC,GAAgB,IAAD,EACpBA,EAAMC,KAA3BC,EADyC,EACzCA,QAASC,EADgC,EAChCA,QACjB,GAAgB,eAAZD,EAA0B,CAAC,IACrBrB,EAAqBsB,EAArBtB,KAAMuB,EAAeD,EAAfC,WACdlB,EAAMmB,oBAAoB,CAAExB,OAAMH,aAAc0B,IAChDZ,EAAQc,KAAK,aAGdV,GACDA,EAAOW,YAAY,CAAEL,QAAS,YAE/B,CAACV,EAASN,IA5CbsB,GAGE,6BACI,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,SACV,kBAAC,EAAD,UAUNZ,EAAiBa,SAAS,6H,MCjBhCC,IAASC,OACL,kBAAC,IAAD,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.e85ada09.chunk.js","sourcesContent":["import { observable, action, configure, computed  } from 'mobx';\nimport { StudyNote } from './types';\nimport moment from 'moment';\nimport { createContext } from 'react';\nconfigure({ enforceActions: \"observed\" });\n\nclass CardsStore {\n    @observable public currentStudyNote: StudyNote = {\n        name: \"Bayesian machine learning\",\n        lastReviewed: new Date()\n    }\n\n    @action.bound\n    async setCurrentStudyNote(note: StudyNote) {\n        this.currentStudyNote = note;\n    }\n\n    @computed\n    get lastReviewedFromNow(): string {\n        if(this.currentStudyNote) {\n            return moment(this.currentStudyNote.lastReviewed,'YYYYMMDD').fromNow();\n        } else {\n            return \"\";\n        }\n    }\n}\nexport { CardsStore };\n\nexport default createContext(new CardsStore());","import React, { FC, useContext } from 'react';\nimport cardsStore from '../store/cardStore';\nimport { observer } from 'mobx-react-lite';\n\nconst StudyNotesInfo: FC = () => {\n    const cards = useContext(cardsStore);\n\n    if(cards.currentStudyNote) {\n        const { name } = cards.currentStudyNote;\n        return (\n            <div className=\"flex flex-row\">\n                <div className=\"px-4 py-2 font-bold\"> Note: <span className=\"font-light\">{name}</span> </div>\n                <div className=\"px-4 py-2 font-bold\"> Last reviewed <span className=\"font-light\">{ cards.lastReviewedFromNow }</span> </div>\n            </div>\n        );\n    } else {\n        return (\n            <div>No Study note selected</div>\n        )\n    }\n   \n}\n\nexport default observer(StudyNotesInfo);","import React, { useEffect, useContext } from 'react';\nimport StudyNotesInfo from './StudyNotesInfo';\nimport cardStore from '../store/cardStore';\nimport { Route, Switch, useHistory } from 'react-router-dom';\n\nconst App: React.FC = () => {\n\n  useVscodeEvents();\n\n  return (\n    <div>\n        <Switch>\n          <Route path=\"/info\">\n            <StudyNotesInfo />\n          </Route>\n        </Switch>\n    </div>\n  );\n}\n\nexport default App;\n\n\nconst vsCodeFunction = Function(`\n  if (typeof acquireVsCodeApi === 'function') {\n    return acquireVsCodeApi();\n  } else {\n    return undefined;\n  }`\n);\n\nfunction useVscodeEvents(){\n  const history = useHistory();\n  const cards = useContext(cardStore)\n\n  useEffect(() => {\n\n    const vsCode = vsCodeFunction();\n  \n  \n    window.addEventListener('message', (event: any) => {\n      const { command, payload } = event.data;\n      if (command === 'study_note') {\n        const { name, lastReview } = payload;\n        cards.setCurrentStudyNote({ name, lastReviewed: lastReview });\n        history.push(\"/info\")\n      }\n    });\n    if(vsCode) {\n      vsCode.postMessage({ command: 'ready' });\n    }\n  }, [history, cards]);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles/tailwind.css';\nimport { MemoryRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <MemoryRouter>\n        <App />\n    </MemoryRouter>,\n    document.getElementById('root')\n);"],"sourceRoot":""}